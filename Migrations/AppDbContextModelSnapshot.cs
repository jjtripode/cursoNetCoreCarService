// <auto-generated />
using System;
using CursoNetCoreCarService.Entities;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace CarServiceFronted.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.6-servicing-10079");

            modelBuilder.Entity("CarServiceFronted.Models.Brand", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Descripcion");

                    b.Property<string>("models");

                    b.HasKey("ID");

                    b.ToTable("Brands");

                    b.HasData(
                        new
                        {
                            ID = new Guid("31fb55d6-7b1b-4006-97a1-3fd605289908"),
                            Descripcion = "Renault",
                            models = "Captur,Clio,Clio Grandtour,Espace,Express,Fluence,Grand Espace,Grand Modus,Grand Scenic,Kadjar,Kangoo,Kangoo Express,Koleos,Laguna,Laguna Grandtour,Latitude,Mascott,Mégane,Mégane CC,Mégane Combi,Mégane Grandtour,Mégane Coupé,Mégane Scénic,Scénic,Talisman,Talisman Grandtour,Thalia,Twingo,Wind,Zoé"
                        });
                });

            modelBuilder.Entity("CarServiceFronted.Models.Service", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("Date");

                    b.Property<string>("Description");

                    b.Property<decimal>("Price");

                    b.Property<string>("Status");

                    b.Property<Guid?>("VehicleID");

                    b.HasKey("ID");

                    b.HasIndex("VehicleID");

                    b.ToTable("Services");
                });

            modelBuilder.Entity("CarServiceFronted.Models.ServiceStatus", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Descripcion");

                    b.Property<int>("IdStatus");

                    b.HasKey("ID");

                    b.ToTable("ServiceStatus");

                    b.HasData(
                        new
                        {
                            ID = new Guid("41e251ca-732f-491f-805d-958d3897c5a4"),
                            Descripcion = "Pending   ",
                            IdStatus = 10
                        },
                        new
                        {
                            ID = new Guid("43b70a54-c8a6-4a2c-bc61-e3549000dc2e"),
                            Descripcion = "InProgress",
                            IdStatus = 20
                        },
                        new
                        {
                            ID = new Guid("dd638e75-2148-4bde-8092-0116e158faee"),
                            Descripcion = "Delayed   ",
                            IdStatus = 30
                        },
                        new
                        {
                            ID = new Guid("d012c4a6-a04e-4938-9efc-ad14a70fc5a0"),
                            Descripcion = "Ended     ",
                            IdStatus = 40
                        });
                });

            modelBuilder.Entity("CarServiceFronted.Models.Vehicle", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Brand");

                    b.Property<string>("CarLicensePlate");

                    b.Property<DateTime>("ManufacturingDate");

                    b.Property<string>("Model");

                    b.HasKey("ID");

                    b.ToTable("Vehicles");
                });

            modelBuilder.Entity("CarServiceFronted.Models.Service", b =>
                {
                    b.HasOne("CarServiceFronted.Models.Vehicle")
                        .WithMany("Services")
                        .HasForeignKey("VehicleID");
                });
#pragma warning restore 612, 618
        }
    }
}
